service: ivilorett-api
frameworkVersion: '3'


provider:
  name: aws
  runtime: nodejs14.x
  environment:
    DYNAMODB_TABLE: ${self:service}-posts-${sls:stage}
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "arn:aws:dynamodb:${aws:region}:*:table/${self:provider.environment.DYNAMODB_TABLE}"

functions:
  create:
    handler: posts/create.create
    events:
      - httpApi:
          path: /posts
          method: post

  list:
    handler: posts/list.list
    events:
      - httpApi:
          path: /posts
          method: get

  get:
    handler: posts/get.get
    events:
      - httpApi:
          path: /posts/{id}
          method: get

  update:
    handler: posts/update.update
    events:
      - httpApi:
          path: /posts/{id}
          method: put

resources:
  Resources:
    PostsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
        -
          AttributeName: id
          AttributeType: S
        KeySchema:
        -
          AttributeName: id
          KeyType: HASH
        BillingMode: PAY_PER_REQUEST

plugins:
  - serverless-plugin-typescript
  - serverless-offline
